(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{337:function(t,s,a){"use strict";a.r(s);var e=a(8),_=Object(e.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("div",{staticClass:"custom-block warning"},[s("p",{staticClass:"custom-block-title"},[t._v("注意")]),t._v(" "),s("p",[t._v("本文由ChatGPT生成，请自行甄别。")])]),t._v(" "),s("p",[t._v("通常情况下，你"),s("strong",[t._v("不需要")]),t._v("手动调用 "),s("code",[t._v("target_link_directories()")]),t._v(" 来设置 Boost 的库目录路径，尤其是在使用 "),s("code",[t._v("find_package()")]),t._v(" 和 "),s("code",[t._v("target_link_libraries()")]),t._v(" 直接链接 Boost 组件（如 "),s("code",[t._v("Boost::system")]),t._v("、"),s("code",[t._v("Boost::filesystem")]),t._v("）的情况下。这里是原因解释：")]),t._v(" "),s("h3",{attrs:{id:"_1-find-package-自动处理库目录"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-find-package-自动处理库目录"}},[t._v("#")]),t._v(" 1. "),s("strong",[s("code",[t._v("find_package()")]),t._v(" 自动处理库目录")]),t._v("：")]),t._v(" "),s("ul",[s("li",[t._v("当你使用 "),s("code",[t._v("find_package(Boost REQUIRED COMPONENTS system filesystem)")]),t._v(" 时，CMake 会通过查找 Boost 的配置文件（如果使用 "),s("code",[t._v("CONFIG")]),t._v(" 模式）或者查找模块（"),s("code",[t._v("MODULE")]),t._v(" 模式）来自动获取 Boost 库的路径，包括头文件目录和库文件目录。")]),t._v(" "),s("li",[t._v("通过 "),s("code",[t._v("find_package()")]),t._v(" 查找到 Boost 后，CMake 会自动设置正确的库文件路径，因此你在 "),s("code",[t._v("target_link_libraries()")]),t._v(" 中直接使用 "),s("code",[t._v("Boost::system")]),t._v(" 和 "),s("code",[t._v("Boost::filesystem")]),t._v(" 时，CMake 已经知道库文件所在的目录，并自动添加到链接路径中。")])]),t._v(" "),s("h3",{attrs:{id:"_2-boost-system-和-boost-filesystem-是目标-targets"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-boost-system-和-boost-filesystem-是目标-targets"}},[t._v("#")]),t._v(" 2. "),s("strong",[s("code",[t._v("Boost::system")]),t._v(" 和 "),s("code",[t._v("Boost::filesystem")]),t._v(" 是目标（Targets）")]),t._v("：")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("Boost::system")]),t._v(" 和 "),s("code",[t._v("Boost::filesystem")]),t._v(" 是由 "),s("code",[t._v("find_package()")]),t._v(" 引入的目标（Targets），这些目标已经预先包含了所有必要的链接信息，包括库文件的路径。因此，当你在 "),s("code",[t._v("target_link_libraries()")]),t._v(" 中引用它们时，CMake 自动知道如何找到并链接这些库。")]),t._v(" "),s("li",[t._v("这些目标不仅包含库文件，还可能包含编译选项、定义、依赖库等，确保程序能够正确编译和链接。")])]),t._v(" "),s("h3",{attrs:{id:"_3-什么时候需要-target-link-directories"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-什么时候需要-target-link-directories"}},[t._v("#")]),t._v(" 3. "),s("strong",[t._v("什么时候需要 "),s("code",[t._v("target_link_directories()")]),t._v("？")])]),t._v(" "),s("ul",[s("li",[s("code",[t._v("target_link_directories()")]),t._v(" 通常只在 CMake 无法自动找到库文件时使用。如果你手动下载了某个库，并且没有使用 CMake 自带的查找模块或配置文件（比如使用 "),s("code",[t._v("find_package()")]),t._v(" 失败），那么你可能需要自己指定库文件的路径。")]),t._v(" "),s("li",[t._v("举个例子，假设你有一个没有使用 CMake 配置文件的库，你需要手动指定其库文件目录："),s("div",{staticClass:"language-cmake line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-cmake"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("target_link_directories")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("${")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("PROJECT_NAME")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("PRIVATE")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"path_to_library"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("target_link_libraries")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("${")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("PROJECT_NAME")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("PRIVATE")]),t._v(" my_library"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])])])]),t._v(" "),s("h3",{attrs:{id:"结论"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#结论"}},[t._v("#")]),t._v(" 结论：")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("不需要 "),s("code",[t._v("target_link_directories()")])]),t._v("：如果你使用 "),s("code",[t._v("find_package()")]),t._v(" 查找 Boost，并通过 "),s("code",[t._v("target_link_libraries()")]),t._v(" 引用 Boost 目标（如 "),s("code",[t._v("Boost::system")]),t._v(" 和 "),s("code",[t._v("Boost::filesystem")]),t._v("），CMake 会自动处理库的路径和链接信息。")]),t._v(" "),s("li",[t._v("你只需确保 "),s("code",[t._v("find_package()")]),t._v(" 成功找到 Boost，且通过 "),s("code",[t._v("target_link_libraries()")]),t._v(" 链接到正确的 Boost 组件即可，无需额外使用 "),s("code",[t._v("target_link_directories()")]),t._v("。")])]),t._v(" "),s("p",[t._v("所以，你的代码：")]),t._v(" "),s("div",{staticClass:"language-cmake line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-cmake"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("target_include_directories")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("${")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("PROJECT_NAME")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("PRIVATE")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("${")]),t._v("Boost_INCLUDE_DIRS"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("target_link_libraries")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("${")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("PROJECT_NAME")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("PRIVATE")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token inserted class-name"}},[t._v("Boost::system")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token inserted class-name"}},[t._v("Boost::filesystem")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])]),s("p",[t._v("已经足够完成对 Boost 的正确链接和包含，不需要再添加 "),s("code",[t._v("target_link_directories()")]),t._v("。")])])}),[],!1,null,null,null);s.default=_.exports}}]);